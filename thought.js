/*
*
*
*   思维通透了  格局就小了
*
*   有一些足够多的 知识积累 你就可以明白这个东西了
*
*    在看见一个东西后
*     要先去考虑这个东西的 实际使用能力  你为什么去学这个技术     当然是为了应用
*     兼容性好不好  能带来那些实际价值（为什么要用这个东西）   使用的时候应该注意什么  这个整体思想
*
*     在学习技术的时候  看文档怎么用  这么用行不行  是不是和其他东西相同原理
*
*     什么叫框架  它的本质
*
*     js中 不管是 vue react angular 还是什么的  他们都是由js 写出来的   顶多就是 他们内部的一些思想 算法 很好
*
*     框架一定是为了你能够 快速开发  提高性能 保证安全的 东西
*
*     框架是一种约束，也是一种最佳实践。让你在团队开发中，不能怎么写，必须怎么写，推荐怎么写。
*
*     而库是一种代码复用的方式，把某些代码段、函数、功能封装起来，你可以开箱即用。
*
*
*
*   所以是程序员 什么是api使用者
*   万物万理皆同
*
*   什么叫做想  为什么叫工程师      其实和建房子是一个意思       构想整个房子 规划图示 使用材料 考虑安全 考虑使用
*                                                            设计解构 状态 这是区别于  搬砖 瓦工 泥工 的区别
*   工程师 和 程序员是有本质区别的
*
*   所以很多人在网上吐槽 自己搬砖
*
*   你想要搭建一个项目  和 建房子
*
*   整体的框架选用  要符合当前项目的需求                        不可能让一个南方设计师 来设计北方的炕  那玩应 他们都没见过
*
*
*
*    思维通了            格局就小了
*
*   我去做一个项目
*
*   想这么久  就TMD想出个造个楼   就没有造小区的想法      格局是小
*   一个区的规划  一个市的规划
*   思想
*
*     PC 是个 9楼的高层  移动端是个 5层的洋房   那么构建的方式  选用的材料必然都不一样  你不去学习 去理解能行么
*
*    HTTP/HTTPS/HTTP2                                                  自来水系统
*     cdn                                                               每个楼下面有一个独立的蓄水池
*    web安全                                                            我这个楼的防震指数
*   1. 我去选择一个好的框架对应 我本次项目所需要的东西 兼容性              1.我是在那找房子啊   高级 中级   南方啊 北方啊  多钱一平啊
*     技术选型()                                                          干欧式啊 还是中国式的
*    要用到哪些技术啊
*     模块化                                                           哪里是厨房啊 哪里是卧室
*     指定规范啊 config                                                    厨房要有下水道啊   卧室要静音好
*     axios     他们都怎么使用啊                                 瓦工啊  木匠啊  搬砖的啊  绑钢筋的啊   这个们我想雕朵花啊  这个人能不能干啊
*     store                                                               进入小区的 提示板
*     router                                                              规划小区电梯 楼梯
*     有哪些问题啊 是不使用啊 怎么解决啊
*     封装 公共方法  组件                                                 这个楼都是这个布局  那个楼都是那个布局
*     mock eslint                                                       白帽子视察啊
*     views中 每个业务文件                                                 相当于装修
*
*
*     前端工程师 这个东西吧  因为基本是脑力活动
*     你还要把 什么瓦工啊 木匠啊 的活 好会熟练使用
*     为什么呢
*     你只有熟练使用 你才能知道怎么去用
*
*      webpack 打包 模块打包机
*
*      那我干错了怎么办    那为什么你就不能干好呢
*      坏的东西是可以补救的    下围棋 为什么要看那么多棋谱    理解你思想  自己搞自己的思想
*
* **/